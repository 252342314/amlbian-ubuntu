#!/bin/bash

case $DISTRIB_TYPE in
	xfce)
		PACKAGE_LIST_DESKTOP+=" $PACKAGE_LIST_OFFICE"
		PACKAGE_LIST_DESKTOP+=" xfce4 lxtask xfce4-screenshooter xfce4-notifyd xfce4-terminal desktop-base software-properties-gtk thunar-archive-plugin xfce4-power-manager"
		[[ $DISTRIBUTION == Ubuntu ]] && PACKAGE_LIST_DESKTOP+=" update-manager"
	;;
	lxde)
		PACKAGE_LIST_DESKTOP+=" $PACKAGE_LIST_OFFICE"
		PACKAGE_LIST_DESKTOP+=" lxde lxlauncher lxmusic lxsession-default-apps lxsession-logout lxshortcut lxtask obconf \
								xfce4-power-manager-plugins lxde-common desktop-base"
	;;
	gnome)
		PACKAGE_LIST_DESKTOP+=" $PACKAGE_LIST_OFFICE"
		PACKAGE_LIST_DESKTOP+=" desktop-base software-properties-gtk gnome-terminal gnome-shell-extensions gnome-tweaks gnome-screenshot"
		([[ $DISTRIB_RELEASE == jammy ]] || [[ $DISTRIB_RELEASE == noble ]]) && PACKAGE_LIST_DESKTOP+=" yaru-theme-gtk yaru-theme-icon yaru-theme-sound"
		[[ $DISTRIBUTION == Ubuntu ]] && PACKAGE_LIST_DESKTOP+=" ubuntu-desktop update-manager"
	;;
esac

case $DISTRIB_RELEASE in
	jammy)
		DEBOOTSTRAP_COMPONENTS="main,universe"
		[[ "$DISTRIB_TYPE" != "minimal" ]] && PACKAGE_LIST_RELEASE="man-db kbd gnupg2 dirmngr networkd-dispatcher libjpeg9 command-not-found libgrpc++1 libboost-system1.74.0 libgcc1 rng-tools iozone3"
		PACKAGE_LIST_DESKTOP+=" $PACKAGE_LIST_GSTREAMER xserver-xorg-input-all gnome-orca pulseaudio pulseaudio-module-bluetooth pulseaudio-module-gsettings language-selector-gnome viewnior dbus-user-session libreoffice-style-tango"
	;;
	noble)
		DEBOOTSTRAP_COMPONENTS="main,universe"
		[[ "$DISTRIB_TYPE" != "minimal" ]] && PACKAGE_LIST_RELEASE="man-db kbd gnupg2 dirmngr networkd-dispatcher libjpeg9 command-not-found libgrpc++1.51t64 libboost-system1.83.0 libgcc1 rng-tools iozone3"
		PACKAGE_LIST_DESKTOP+=" $PACKAGE_LIST_GSTREAMER xserver-xorg-input-all language-selector-gnome viewnior dbus-user-session libreoffice-style-tango"
		# Package dependencies for chromium
		PACKAGE_LIST_DESKTOP+=" libdouble-conversion3 libharfbuzz-subset0 libjsoncpp25 libminizip1t64 libxnvctrl0 xdg-utils"
	;;
esac

# add for debug tools
if [ "$BUILD_TYPE" == develop ]; then
	# add for GPU test
	PACKAGE_LIST_DESKTOP+=" glmark2-es2-wayland"
	
	# add common debug tool here for develop version
	PACKAGE_LIST_DESKTOP+=" silversearcher-ag v4l-utils tilix adb python3-pip "
fi


DEBIAN_MIRROR='ports.ubuntu.com/'

if [[ $DOWNLOAD_MIRROR == china ]] ; then
	DEBIAN_MIRROR='mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/'
fi

# apt-cacher-ng mirror configuration
APT_MIRROR=$DEBIAN_MIRROR

# add chromium-browser ppa source
add_chromium_ppa_source() {
	info_msg "add chromium-browser ppa source"
	eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "echo | add-apt-repository ppa:saiarcot895/chromium-beta"'
}

## Install  check-language-support
Install_check_language_support() {
	## For chinese language and input method
	if [[ $SUPPORT_LANGUAGE == CHS ]] ; then
		#shell_chroot "apt-get install language-pack-zh-hans -y"
		#shell_chroot "apt install $(check-language-support) -y"
		info_msg "Installing check-language-support"
		if [ $DISTRIB_RELEASE != "bullseye" ] && [ $DISTRIB_RELEASE != "bookworm" ];then
			info_msg "Installing chromium-browser-l10n"
			eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "apt-get install chromium-browser-l10n=1:107.0.5304.62-0ubuntu1~ppa1~22.04.1 -y"'
		fi
		shell_chroot "apt install _AML_PRE_BRACKET_check-language-support_AML_POST_BRACKET_ -y"
	fi
}

